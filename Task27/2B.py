"""
Учёный решил провести кластеризацию некоторого множества звёзд по их расположению на карте звёздного неба.
Кластер звёзд – это набор не менее чем из 30 соседних звёзд (точек) на графике. Каждая звезда обязательно принадлежит только одному из кластеров.
Центр кластера, или центроид, – это одна из звёзд на графике, сумма расстояний от которой до всех остальных звёзд кластера минимальна. Расстояние между двумя точками
Аномалиями назовём точки, находящиеся на расстоянии более одной условной единицы от точек кластеров. При расчётах аномалии учитывать не нужно.
В файле A хранятся данные о звёздах двух кластеров. В каждой строке записана информация о расположении на карте одной звезды: сначала координата x, затем координата y (в условных единицах).
 Известно, что количество звёзд не превышает 1000. В файле Б хранятся данные о звёздах трёх кластеров. Известно, что количество звёзд не превышает 10 000.
 Структура хранения информации о звездах в файле Б аналогична файлу А. Возможные данные одного из файлов иллюстрированы графиком.
Для каждого файла определите координаты центра каждого кластера, затем вычислите два числа:
  – среднее арифметическое абсцисс центров кластеров, и
  – среднее арифметическое ординат центров кластеров. В ответе запишите четыре числа: в первой строке сначала целую часть произведения
 ×100000, затем целую часть произведения
 ×100000 для файла А, во второй строке – аналогичные данные для файла Б.
"""
import math

f = open("27B_18677.txt").readlines()
ax = []
ay = []
bx = []
by = []
cx = []
cy = []
x1 = []
y1 = []
for t in f:
    x, y = map(float, t.split())
    if not (y > 8 and x < 4 or x > 10 and y > 9 or x > 9 and y < -2):
        if x > 5 and x < 8 and y >  2 and y < 7:
            ax.append(x)
            ay.append(y)
        elif y<6 and x<8:
            bx.append(x)
            by.append(y)
        else:
            cx.append(x)
            cy.append(y)
print(len(ax),len(bx),len(cx))
mn_d = 10000000000000000000
mn_x = 0
mn_y = 0
for i in range(len(ax)):
    sm = 0
    for j in range(len(ax)):
        sm += math.sqrt((ax[i] - ax[j]) ** 2 + (ay[i] - ay[j]) ** 2)
    if sm < mn_d:
        mn_d = sm
        mn_y = ay[i]
        mn_x = ax[i]
x1.append(mn_x)
y1.append(mn_y)
print(mn_x, mn_y)
mn_d = 10000000000000000000
mn_x = 0
mn_y = 0
for i in range(len(bx)):
    sm = 0
    for j in range(len(bx)):
        sm += math.sqrt((bx[i] - bx[j]) ** 2 + (by[i] - by[j]) ** 2)
    if sm < mn_d:
        mn_d = sm
        mn_y = by[i]
        mn_x = bx[i]
print(mn_x, mn_y)
x1.append(mn_x)
y1.append(mn_y)
mn_d = 10000000000000000000
mn_x = 0
mn_y = 0
for i in range(len(cx)):
    sm = 0
    for j in range(len(cx)):
        sm += math.sqrt((cx[i] - cx[j]) ** 2 + (cy[i] - cy[j]) ** 2)
    if sm < mn_d:
        mn_d = sm
        mn_y = cy[i]
        mn_x = cx[i]
x1.append(mn_x)
y1.append(mn_y)
print(mn_x, mn_y)
print(sum(x1) / 3 * 100000, sum(y1) / 3 * 100000)
# Аномалии вычисляются просто глазением в экселе
